@using EPiServer.Commerce.Marketing
@using EPiServer.Reference.Commerce.Site.Features.Start.ViewModels
@model StartPageViewModel
@{
    IEnumerable<PromotionViewModel> promotions = Model.Promotions;
}
<div class="container-fluid">
    <div class="row">
        <div class="col-xs-12">
            @using (Html.BeginForm("Index", null, new { node = Model.StartPage.ContentLink }, FormMethod.Post))
            {
                <div class="form-group">
                    <input type="text" placeholder="Invite your friend's by providing us his/her email address to share your experience" class="form-control form-inline" id="email" name="email" />
                    <input type="submit" value="Invite" />
                </div>
            }
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12">
            @if (promotions.Any())
            {
                <div id="promotion-carousel" class="carousel slide" data-ride="carousel">
                    <div class="carousel-inner" role="listbox">
                        @for (var i = 0; i < promotions.Count(); i++)
                        {
                            <div class="item" data-slide-number="@i">
                                <img src="@Url.ContentUrl(promotions.ElementAt(i).BannerImage)"/>
                            </div>
                        }
                    </div>
                </div>
            }
            @Html.PropertyFor(x => x.StartPage.MainBody)
        </div>
    </div>
</div>
@foreach (var promotion in promotions)
{
    <div class="container-fluid product-row">
        <div class="row">
            <div>
                <h2>@promotion.Name</h2>
                @if (promotion.SelectionType == CatalogItemSelectionType.All)
                {
                    <span class="product-brand">@Html.Translate("/StartPage/Promotion/AllItems")</span><br />
                }
                @foreach (var promotionItem in promotion.Items)
                {
                    <div class="jsProductTile product-row__tile col-xs-12 col-sm-6 col-lg-4">@{Html.RenderContentData(promotionItem, false);}</div>
                }
            </div>
        </div>
    </div>
}

@if (@Functions.UseClientSideTracking())
{
    @section RecommendationsContextSettings { sectionMappings: [{ area: "homeWidget", selector: ".recommendations-right", numberOfItemsToRender: 6 }] }
}
else
{
    @section RightMarginRecommendations {@{Html.RenderAction("Index", "Recommendations", new { recommendations = Model.Recommendations });}}
}